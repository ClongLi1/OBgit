{
  "categories": {
    "Flowchart": "Flowchart",
    "SequenceDiagram": "SequenceDiagram",
    "ClassDiagram": "ClassDiagram",
    "StateDiagram": "StateDiagram",
    "EntityRelationshipDiagram": "EntityRelationshipDiagram",
    "UserJourneyDiagram": "UserJourneyDiagram",
    "GanttChart": "GanttChart",
    "PieChart": "PieChart",
    "RequirementDiagram": "RequirementDiagram",
    "GitGraph": "GitGraph",
    "Mindmap": "Mindmap",
    "Timeline": "Timeline",
    "C4Diagram": "C4Diagram",
    "QuadrantChart": "QuadrantChart",
    "SankeyDiagram": "SankeyDiagram",
    "XyChart": "XyChart",
    "Kanban": "Kanban",
    "Architecture": "Architecture",
    "Block": "Block",
    "Packet": "Packet"
  },
  "elements": [
    {
      "id": "04de556c-b645-407e-a3c5-a3d9b2a240eb",
      "category": "Flowchart",
      "description": "a simple flowchart with top to down direction",
      "content": "flowchart TD\nStart --> Stop",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "b794b514-4b5f-4ee5-bc13-9a9ded945699",
      "category": "Flowchart",
      "description": "a simple flowchart with left to right direction",
      "content": "flowchart LR\nStart --> Stop",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "59feef6b-b892-443d-ab25-c5fc3bd6addd",
      "category": "Flowchart",
      "description": "A node with round edges",
      "content": "id1(Some text)",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "0c2b6bcc-a383-4752-a108-97181805ee7f",
      "category": "Flowchart",
      "description": "A stadium-shaped node",
      "content": "id1([Some text])",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "db71252a-e227-4088-9785-527253b3487b",
      "category": "Flowchart",
      "description": "A node in a cylindrical shape",
      "content": "id1[(Database)]",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "0aaa1b17-0df9-4914-83c8-53dd39fb7279",
      "category": "Flowchart",
      "description": "Circle",
      "content": "id1((Some text))",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "1c2f78e2-5a83-412b-b5da-866164b0f40d",
      "category": "Flowchart",
      "description": "Rhombus",
      "content": "id1{Some text}",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "a49d14a7-51e8-47b4-bbfe-d3b0e5f4bab0",
      "category": "Flowchart",
      "description": "Hexagon",
      "content": "id1{{Some text}}",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "9b7f98a3-a3e0-4008-88bf-8ec3316fe425",
      "category": "Flowchart",
      "description": "Parallelogram skewed right",
      "content": "id1[/Some text/]",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "2e7d7b69-ed26-4954-8190-ed24d78d0722",
      "category": "Flowchart",
      "description": "Parallelogram skewed left",
      "content": "id1[\\Some text\\]",
      "sortingOrder": 10,
      "isPinned": false
    },
    {
      "id": "63449c4a-d96c-48ea-ba73-f7688304f784",
      "category": "Flowchart",
      "description": "Trapezoid",
      "content": "A[/Some text\\]",
      "sortingOrder": 11,
      "isPinned": false
    },
    {
      "id": "778aa868-58c6-4814-80b6-dcb3f37f8ac2",
      "category": "Flowchart",
      "description": "Trapezoid upside down",
      "content": "A[\\Some text/]",
      "sortingOrder": 12,
      "isPinned": false
    },
    {
      "id": "be14b452-8c74-4f8a-b9da-130bdf653614",
      "category": "Flowchart",
      "description": "Double circle node",
      "content": "id1(((Some text)))",
      "sortingOrder": 13,
      "isPinned": false
    },
    {
      "id": "09014362-2f81-4a38-9fd0-13478cb35310",
      "category": "Flowchart",
      "description": "A link with arrow head",
      "content": "A-->B",
      "sortingOrder": 14,
      "isPinned": false
    },
    {
      "id": "20e6814d-de5c-48d1-804c-174f96cb17b9",
      "category": "Flowchart",
      "description": "An open link",
      "content": "A --- B",
      "sortingOrder": 15,
      "isPinned": false
    },
    {
      "id": "773883ac-a481-4a2a-a3f6-9183dc8ca2fd",
      "category": "Flowchart",
      "description": "Text on links",
      "content": "A-- This is the text! ---B",
      "sortingOrder": 16,
      "isPinned": false
    },
    {
      "id": "8667da8c-b3e4-445d-ad77-b5d12970db15",
      "category": "Flowchart",
      "description": "A link with arrow head and text",
      "content": "A-->|text|B",
      "sortingOrder": 17,
      "isPinned": false
    },
    {
      "id": "1d68f7be-10b2-465a-abcf-2c6fc4d9df14",
      "category": "Flowchart",
      "description": "Dotted link",
      "content": "A-.->B",
      "sortingOrder": 18,
      "isPinned": false
    },
    {
      "id": "d3651540-3339-49e1-9204-7ef16d26a1b4",
      "category": "Flowchart",
      "description": "Thick link",
      "content": "A ==> B",
      "sortingOrder": 19,
      "isPinned": false
    },
    {
      "id": "af38d2b2-0fca-4c6e-955e-2151a4a7837b",
      "category": "Flowchart",
      "description": "Invisible link",
      "content": "A ~~~ B",
      "sortingOrder": 20,
      "isPinned": false
    },
    {
      "id": "0cb2fac2-91fe-4263-bbf8-dd48c7cd29fb",
      "category": "Flowchart",
      "description": "Link with circle edge",
      "content": "A --o B",
      "sortingOrder": 21,
      "isPinned": false
    },
    {
      "id": "54e1a7f8-392f-43e3-89e7-37d7b41a4c3d",
      "category": "Flowchart",
      "description": "Link with cross edge",
      "content": "A --x B",
      "sortingOrder": 22,
      "isPinned": false
    },
    {
      "id": "69a3618d-f731-4151-8be3-e76676a4e627",
      "category": "Flowchart",
      "description": "Subgraph",
      "content": "subgraph one\na1-->a2\nend",
      "sortingOrder": 14,
      "isPinned": false
    },
    {
      "id": "fb5bfb30-71c9-4913-9436-2587b71af79a",
      "category": "SequenceDiagram",
      "description": "a simple sequence diagram",
      "content": "sequenceDiagram\nAlice->>John: Hello John, how are you?\nJohn-->>Alice: Great!\nAlice-)John: See you later!",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "f00091e0-d66b-498d-a8e8-b0937f9f10b0",
      "category": "SequenceDiagram",
      "description": "a simple sequence diagram with actors",
      "content": "sequenceDiagram\nactor Alice\nactor John\nAlice->>John: Hello John, how are you?\nJohn-->>Alice: Great!\nAlice-)John: See you later!",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "110d1db7-5cef-412d-ac87-10cc4943498e",
      "category": "ClassDiagram",
      "description": "sample class",
      "content": "class Duck{\n            +String beakColor\n            +swim()\n            +quack()\n        }",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "b27445b1-430e-4fb5-addc-eeea5f5c892d",
      "category": "ClassDiagram",
      "description": "sample class",
      "content": "class BankAccount\n        BankAccount : +String owner\n        BankAccount : +Bigdecimal balance\n        BankAccount : +deposit(amount)\n        BankAccount : +withdrawal(amount)",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "74fb58ce-3008-45ac-b696-d4fe7a87271f",
      "category": "ClassDiagram",
      "description": "generic class",
      "content": "class Square~Shape~{\n            int id\n            List~int~ position\n            setPoints(List~int~ points)\n            getPoints() List~int~\n        }\n        \n        Square : -List~string~ messages\n        Square : +setMessages(List~string~ messages)\n        Square : +getMessages() List~string~",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "5da19b29-b730-40ef-af80-e5feac7ce52a",
      "category": "ClassDiagram",
      "description": "inheritance",
      "content": "classA <|-- classB",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "f5648cee-b70e-4630-bc9c-badf3855b986",
      "category": "ClassDiagram",
      "description": "composition",
      "content": "classC *-- classD",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "e103420b-ad0b-4cff-ae3c-08959e76bfe1",
      "category": "ClassDiagram",
      "description": "aggregation",
      "content": "classE o-- classF",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "b2a0128b-415b-4846-b301-880cdb6b6019",
      "category": "ClassDiagram",
      "description": "association",
      "content": "classG <-- classH",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "2d562821-afa4-4f5d-a9c9-274b9d74f46b",
      "category": "ClassDiagram",
      "description": "solid link",
      "content": "classI -- classJ",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "3f2ad33f-7729-41bf-b6e3-ce42086c5efc",
      "category": "ClassDiagram",
      "description": "dependency",
      "content": "classK <.. classL",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "f531422d-3433-46c6-afca-6e20c996a9ae",
      "category": "ClassDiagram",
      "description": "realization",
      "content": "classM <|.. classN",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "d258353a-6568-49c9-b6ed-a8568a0de98a",
      "category": "ClassDiagram",
      "description": "dashed link",
      "content": "classO .. classP",
      "sortingOrder": 10,
      "isPinned": false
    },
    {
      "id": "f8c83679-445a-410a-a5b8-81cbd0291a80",
      "category": "ClassDiagram",
      "description": "two-way relation",
      "content": "Animal <|--|> Zebra",
      "sortingOrder": 11,
      "isPinned": false
    },
    {
      "id": "33634a68-34ec-44ee-b9e4-bd186020fb49",
      "category": "ClassDiagram",
      "description": "sample class diagram",
      "content": "classDiagram\n        Animal <|-- Duck\n        Animal <|-- Fish\n        Animal <|-- Zebra\n        Animal : +int age\n        Animal : +String gender\n        Animal: +isMammal()\n        Animal: +mate()\n        class Duck{\n            +String beakColor\n            +swim()\n            +quack()\n        }\n        class Fish{\n            -int sizeInFeet\n            -canEat()\n        }\n        class Zebra{\n            +bool is_wild\n            +run()\n        }",
      "sortingOrder": 12,
      "isPinned": false
    },
    {
      "id": "5ff988a1-bba8-4fd2-82d8-9677efc7dd61",
      "category": "StateDiagram",
      "description": "a sample state diagram",
      "content": "stateDiagram-v2\n        [*] --> Still\n        Still --> [*]\n    \n        Still --> Moving\n        Moving --> Still\n        Moving --> Crash\n        Crash --> [*]",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "652e3fd8-3a90-4a67-afb6-7f5a8e09e669",
      "category": "StateDiagram",
      "description": "a sample state diagram with left-to-right direction",
      "content": "stateDiagram-v2\n        direction LR\n        [*] --> Still\n        Still --> [*]\n    \n        Still --> Moving\n        Moving --> Still\n        Moving --> Crash\n        Crash --> [*]",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "3a939512-9fb6-4097-8459-ba8e8a340d1a",
      "category": "StateDiagram",
      "description": "node with description",
      "content": "s2 : This is a state description",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "8f55beca-dc67-4dd5-9acc-4b29949e569f",
      "category": "StateDiagram",
      "description": "a transition",
      "content": "s1 --> s2",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "05798ab6-f26b-42e3-b686-5a42bf8042f3",
      "category": "StateDiagram",
      "description": "a transition with label",
      "content": "s1 --> s2: A transition",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "ddbac791-71c3-4b1d-8e35-ebde3cf8308e",
      "category": "StateDiagram",
      "description": "composite state",
      "content": "\n        [*] --> First\n        state First {\n            [*] --> second\n            second --> [*]\n        }",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "b62c0546-b342-474a-83c9-02ec5191c62a",
      "category": "StateDiagram",
      "description": "diagram with choice",
      "content": "stateDiagram-v2\n        state if_state <<choice>>\n        [*] --> IsPositive\n        IsPositive --> if_state\n        if_state --> False: if n < 0\n        if_state --> True : if n >= 0",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "47fcde95-e094-47c7-ba64-0d7dde256d1d",
      "category": "StateDiagram",
      "description": "diagram with fork",
      "content": "stateDiagram-v2\n        state fork_state <<fork>>\n          [*] --> fork_state\n          fork_state --> State2\n          fork_state --> State3\n    \n          state join_state <<join>>\n          State2 --> join_state\n          State3 --> join_state\n          join_state --> State4\n          State4 --> [*]",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "bca0de84-fae8-498c-b983-12e841487616",
      "category": "StateDiagram",
      "description": "a diagram with concurrency",
      "content": "stateDiagram-v2\n        [*] --> Active\n    \n        state Active {\n            [*] --> NumLockOff\n            NumLockOff --> NumLockOn : EvNumLockPressed\n            NumLockOn --> NumLockOff : EvNumLockPressed\n            --\n            [*] --> CapsLockOff\n            CapsLockOff --> CapsLockOn : EvCapsLockPressed\n            CapsLockOn --> CapsLockOff : EvCapsLockPressed\n            --\n            [*] --> ScrollLockOff\n            ScrollLockOff --> ScrollLockOn : EvScrollLockPressed\n            ScrollLockOn --> ScrollLockOff : EvScrollLockPressed\n        }",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "c5eeb5e2-668a-4924-abdb-75bd4551f6b3",
      "category": "EntityRelationshipDiagram",
      "description": "a sample entity relationship diagram",
      "content": "erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n        CUSTOMER }|..|{ DELIVERY-ADDRESS : uses",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "2b3b49fa-73a1-48dc-9d3d-c75effe6d678",
      "category": "EntityRelationshipDiagram",
      "description": "an entity",
      "content": "    CUSTOMER {\n            string name\n            string custNumber\n            string sector\n        }",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "45076171-8dc0-457b-b00f-0daa73c0a1a1",
      "category": "EntityRelationshipDiagram",
      "description": "one-to-many relationship",
      "content": "A ||--|{ B : label",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "361aa373-7006-4f14-8afb-2aa88906ab1b",
      "category": "EntityRelationshipDiagram",
      "description": "many-to-many relationship",
      "content": "A }|--|{ B : label",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "f32a5bbd-3bfc-424a-8eaa-aa2994d94e23",
      "category": "EntityRelationshipDiagram",
      "description": "one-to-one relationship",
      "content": "A ||--|| B : label",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "c34babec-860e-426b-afc1-7af81e24f8c7",
      "category": "EntityRelationshipDiagram",
      "description": "many-to-one relationship",
      "content": "A }|--|| B : label",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "6d162903-9aae-477d-aeb4-b4cb33c5012e",
      "category": "EntityRelationshipDiagram",
      "description": "zero/one-to-one relationship",
      "content": "A |o--|| B : label",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "2404403e-ab47-4443-bf23-eefb475fb69e",
      "category": "EntityRelationshipDiagram",
      "description": "one-to-one/zero relationship",
      "content": "A ||--o| B : label",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "71060c3f-59f0-4997-bce7-1eb655f5c8b9",
      "category": "EntityRelationshipDiagram",
      "description": "zero-or-more-to-one relationship",
      "content": "A }o--|| B : label",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "9e965cec-ec21-4687-889e-c33ff6e221c6",
      "category": "EntityRelationshipDiagram",
      "description": "one-to-zero-or-more relationship",
      "content": "A ||--o{ B : label",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "fd7b077a-4b13-4f44-bb5a-58395b67231e",
      "category": "EntityRelationshipDiagram",
      "description": "zero-or-more-to-many relationship",
      "content": "A }o--|{ B : label",
      "sortingOrder": 10,
      "isPinned": false
    },
    {
      "id": "d9fa0f46-afa5-4a43-93f1-2bf270d1a9cf",
      "category": "EntityRelationshipDiagram",
      "description": "many-to-zero-or-more relationship",
      "content": "A }|--o{ B : label",
      "sortingOrder": 11,
      "isPinned": false
    },
    {
      "id": "c7ab9cd2-f7a6-4b9f-a658-febf5e7ad95e",
      "category": "UserJourneyDiagram",
      "description": "a sample user journey diagram",
      "content": "journey\n        title My working day\n        section Go to work\n          Make tea: 5: Me\n          Go upstairs: 3: Me\n          Do work: 1: Me, Cat\n        section Go home\n          Go downstairs: 5: Me\n          Sit down: 5: Me",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "aba2e830-6ae8-4b12-a07d-68ec0d098ff0",
      "category": "UserJourneyDiagram",
      "description": "a step in user journey",
      "content": "      Step Title: 5: ActorName",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "0c3e68d4-e360-46c3-b05f-34644fb81221",
      "category": "GanttChart",
      "description": "simple gantt chart",
      "content": "gantt\n        title A Gantt Diagram\n        dateFormat  YYYY-MM-DD\n        section Section\n        A task           :a1, 2014-01-01, 30d\n        Another task     :after a1  , 20d\n        section Another\n        Task in sec      :2014-01-12  , 12d\n        another task      : 24d",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "5e72b04c-7559-441c-9585-7ed180c92cf6",
      "category": "GanttChart",
      "description": "rich gantt chart",
      "content": "gantt\n        dateFormat  YYYY-MM-DD\n        title       Adding GANTT diagram functionality to mermaid\n        excludes    weekends\n    \n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2              :         des4, after des3, 5d\n    \n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d\n        Functionality added                 :milestone, 2014-01-25, 0d\n    \n        section Documentation\n        Describe gantt syntax               :active, a1, after des1, 3d\n        Add gantt diagram to demo page      :after a1  , 20h\n        Add another diagram to demo page    :doc1, after a1  , 48h\n    \n        section Last section\n        Describe gantt syntax               :after doc1, 3d\n        Add gantt diagram to demo page      :20h\n        Add another diagram to demo page    :48h",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "3444ddff-7fb6-45da-b8f3-1c20c44894a7",
      "category": "GanttChart",
      "description": "milestones example",
      "content": "gantt\n        dateFormat HH:mm\n        axisFormat %H:%M\n        Initial milestone : milestone, m1, 17:49,2min\n        taska2 : 10min\n        taska3 : 5min\n        Final milestone : milestone, m2, 18:14, 2min",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "91ff2563-0797-46dd-8d85-887caf610a19",
      "category": "PieChart",
      "description": "sample pie chart",
      "content": "pie title /r/obsidianmd posts by type\n        \"Graphs\" : 85\n        \"Dashboards\" : 14\n        \"Tips\" : 1",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "19477cc9-a27e-402b-838d-c9f8283d370e",
      "category": "PieChart",
      "description": "sample pie chart with values shown in legend",
      "content": "pie showData title /r/obsidianmd posts by type\n        \"Graphs\" : 85\n        \"Dashboards\" : 14\n        \"Tips\" : 1",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "1e70f268-e42a-4f7a-8b05-47026d1197db",
      "category": "RequirementDiagram",
      "description": "sample requirements diagram",
      "content": "    requirementDiagram\n\n        requirement test_req {\n        id: 1\n        text: the test text.\n        risk: high\n        verifymethod: test\n        }\n    \n        element test_entity {\n        type: simulation\n        }\n    \n        test_entity - satisfies -> test_req",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "4dcdbc3f-3e45-41bd-9364-ad459ed7aaa9",
      "category": "RequirementDiagram",
      "description": "sample requirements diagram",
      "content": "element customElement {\n            type: customType\n            docref: customDocRef\n        }",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "318c1d89-83e1-4f27-9be5-6afe24b4609b",
      "category": "RequirementDiagram",
      "description": "a requirement with high risk",
      "content": "functionalRequirement myReq {\n            id: reqId\n            text: someText\n            risk: High\n            verifymethod: analysis\n        }",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "efbd5e07-ca0e-4937-8086-359b08a16f31",
      "category": "RequirementDiagram",
      "description": "sample requirements diagram",
      "content": "interfaceRequirement myReq2 {\n            id: reqId\n            text: someText\n            risk: Medium\n            verifymethod: demonstration\n        }",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "a897a2bf-2498-4044-a480-9a620c82243f",
      "category": "RequirementDiagram",
      "description": "sample requirements diagram",
      "content": "designConstraint myReq3 {\n            id: reqId\n            text: someText\n            risk: Low\n            verifymethod: test\n        }",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "69c1fdda-01ac-421c-9a2c-7b88671222fc",
      "category": "GitGraph",
      "description": "simple git graph",
      "content": "gitGraph\n        commit\n        commit\n        branch develop\n        checkout develop\n        commit\n        commit\n        checkout main\n        merge develop\n        commit\n        commit",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "0fcb92fd-48a9-4b81-8513-ba571ba23801",
      "category": "GitGraph",
      "description": "tagged commit",
      "content": "commit id: \"Normal\" tag: \"v1.0.0\"",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "a0c11b15-5c13-4a57-a64e-cad21c3cf819",
      "category": "GitGraph",
      "description": "reverse commit",
      "content": "commit id: \"Reverse\" type: REVERSE",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "69467f00-7eae-4ef1-8522-6f845d69880c",
      "category": "GitGraph",
      "description": "highlighted commit",
      "content": "commit id: \"Highlight\" type: HIGHLIGHT",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "95b0447f-2329-4bf5-88f5-a4956856c849",
      "category": "GitGraph",
      "description": "reverse commit",
      "content": "commit id: \"Reverse\" type: REVERSE",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "ea4f0de3-5636-44b1-9155-8342927fb56f",
      "category": "GitGraph",
      "description": "git graph with cherry-pick",
      "content": "gitGraph\n        commit id: \"ZERO\"\n        branch develop\n        commit id:\"A\"\n        checkout main\n        commit id:\"ONE\"\n        checkout develop\n        commit id:\"B\"\n        checkout main\n        commit id:\"TWO\"\n        cherry-pick id:\"A\"\n        commit id:\"THREE\"\n        checkout develop\n        commit id:\"C\"",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "062af9a0-1cda-49ea-9c49-003f296d34df",
      "category": "Mindmap",
      "description": "a simple mindmap",
      "content": "mindmap\n        Root\n            A\n              B\n              C",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "4f208d9c-2ec8-4d41-a5a8-e2cf24c583e8",
      "category": "Mindmap",
      "description": "square",
      "content": "id[I am a square]",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "74eae5ea-d022-4ff2-a3e4-bb76403f4bcd",
      "category": "Mindmap",
      "description": "rounded square",
      "content": "id(I am a rounded square)",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "e7d691cc-80f5-4971-8b4f-aeceb860e3ed",
      "category": "Mindmap",
      "description": "circle",
      "content": "id((I am a circle))",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "28520f95-36fc-4e22-b933-e8bab506029a",
      "category": "Mindmap",
      "description": "bang",
      "content": "id))I am a bang((",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "e1b0695f-7d0b-48ca-b9eb-d29aac83f8e6",
      "category": "Mindmap",
      "description": "cloud",
      "content": "id)I am a cloud(",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "7eecf17d-b03a-493a-9f21-e1477c95d537",
      "category": "Mindmap",
      "description": "hexagon",
      "content": "id{{I am a hexagon}}",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "3927e8e8-dd1b-4e61-bebe-5f0803086cbb",
      "category": "Mindmap",
      "description": "default",
      "content": "I am the default shape",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "638e7851-5345-4504-8854-490d972692a9",
      "category": "Mindmap",
      "description": "sample mindmap",
      "content": "mindmap\n        root((mindmap))\n          Origins\n            Long history\n            Popularisation\n              British popular psychology author Tony Buzan\n          Research\n            On effectiveness<br/>and features\n            On Automatic creation\n              Uses\n                  Creative techniques\n                  Strategic planning\n                  Argument mapping\n          Tools\n            Pen and paper\n            Mermaid",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "6363407c-942a-4580-93a7-5be0658c6c70",
      "category": "Timeline",
      "description": "sample timeline",
      "content": "timeline\n\t\ttitle History of Social Media Platform\n\t\t2002 : LinkedIn\n\t\t2004 : Facebook\n\t\t\t : Google\n\t\t2005 : Youtube\n\t\t2006 : Twitter",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "4eba96e7-4c4d-4cca-9364-ab7d2c568203",
      "category": "Timeline",
      "description": "timeline with grouping",
      "content": "timeline\n\t\ttitle Timeline of Industrial Revolution\n\t\tsection 17th-20th century\n\t\t\tIndustry 1.0 : Machinery, Water power, Steam <br>power\n\t\t\tIndustry 2.0 : Electricity, Internal combustion engine, Mass production\n\t\t\tIndustry 3.0 : Electronics, Computers, Automation\n\t\tsection 21st century\n\t\t\tIndustry 4.0 : Internet, Robotics, Internet of Things\n\t\t\tIndustry 5.0 : Artificial intelligence, Big data,3D printing",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "37fee1c7-3ae4-49dd-8f51-a06ea8bc0950",
      "category": "Timeline",
      "description": "timeline with Forest theme. see the docs for additional themes",
      "content": "%%{init: { 'logLevel': 'debug', 'theme': 'forest' } }%%\n\t\ttimeline\n\t\t\ttitle History of Social Media Platform\n\t\t\t  2002 : LinkedIn\n\t\t\t  2004 : Facebook : Google\n\t\t\t  2005 : Youtube\n\t\t\t  2006 : Twitter\n\t\t\t  2007 : Tumblr\n\t\t\t  2008 : Instagram\n\t\t\t  2010 : Pinterest",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "bee5dcae-01d5-40d9-9e54-a907fae34f21",
      "category": "QuadrantChart",
      "description": "sample quadrant chart",
      "content": "quadrantChart\n\t\ttitle Reach and engagement of campaigns\n\t\tx-axis Low Reach --> High Reach\n\t\ty-axis Low Engagement --> High Engagement\n\t\tquadrant-1 We should expand\n\t\tquadrant-2 Need to promote\n\t\tquadrant-3 Re-evaluate\n\t\tquadrant-4 May be improved\n\t\tCampaign A: [0.3, 0.6]\n\t\tCampaign B: [0.45, 0.23]\n\t\tCampaign C: [0.57, 0.69]\n\t\tCampaign D: [0.78, 0.34]\n\t\tCampaign E: [0.40, 0.34]\n\t\tCampaign F: [0.35, 0.78]",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "cbcafe49-80c3-40fa-ae41-864f11d1bfd7",
      "category": "QuadrantChart",
      "description": "themed quadrant chart",
      "content": "%%{init: {\"quadrantChart\": {\"chartWidth\": 400, \"chartHeight\": 400}, \"themeVariables\": {\"quadrant1TextFill\": \"#ff0000\"} }}%%\n\t\tquadrantChart\n\t\t  x-axis Urgent --> Not Urgent\n\t\t  y-axis Not Important --> \"Important ❤\"\n\t\t  quadrant-1 Plan\n\t\t  quadrant-2 Do\n\t\t  quadrant-3 Delegate\n\t\t  quadrant-4 Delete",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "d2d9ffaf-b0a6-4151-8e6d-40def50ce0b5",
      "category": "C4Diagram",
      "description": "sample C4 diagram (compatible with PlantUML)",
      "content": "C4Context\n\t\ttitle System Context diagram for Internet Banking System\n\t\tEnterprise_Boundary(b0, \"BankBoundary0\") {\n\t\t  Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\")\n\t\t  Person(customerB, \"Banking Customer B\")\n\t\t  Person_Ext(customerC, \"Banking Customer C\", \"desc\")\n  \n\t\t  Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\")\n  \n\t\t  System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\")\n  \n\t\t  Enterprise_Boundary(b1, \"BankBoundary\") {\n  \n\t\t\tSystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\")\n  \n\t\t\tSystem_Boundary(b2, \"BankBoundary2\") {\n\t\t\t  System(SystemA, \"Banking System A\")\n\t\t\t  System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\")\n\t\t\t}\n  \n\t\t\tSystem_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\")\n\t\t\tSystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\")\n  \n\t\t\tBoundary(b3, \"BankBoundary3\", \"boundary\") {\n\t\t\t  SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\")\n\t\t\t  SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\")\n\t\t\t}\n\t\t  }\n\t\t}\n  \n\t\tBiRel(customerA, SystemAA, \"Uses\")\n\t\tBiRel(SystemAA, SystemE, \"Uses\")\n\t\tRel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\")\n\t\tRel(SystemC, customerA, \"Sends e-mails to\")\n  \n\t\tUpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\")\n\t\tUpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\")\n\t\tUpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\")\n\t\tUpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\")\n\t\tUpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\")\n  \n\t\tUpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\")",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "353d2f7a-d8e8-45f7-b778-57f2066f5546",
      "category": "SankeyDiagram",
      "description": "",
      "content": "sankey-beta\n        %% source,target,value\n        Electricity grid,Over generation / exports,104.453\n        Electricity grid,Heating and cooling - homes,113.726\n        Electricity grid,H2 conversion,27.14",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "e6b8e1ab-f4fc-4413-80fa-e0480b575428",
      "category": "XyChart",
      "description": "a sample XYChart diagram",
      "content": "xychart-beta\n        title \"Sales Revenue\"\n        x-axis [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec]\n        y-axis \"Revenue (in $)\" 4000 --> 11000\n        bar [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]\n        line [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "4e589361-49a6-4237-8099-68ee57d42f48",
      "category": "Packet",
      "description": "a sample packet diagram",
      "content": "packet-beta\ntitle UDP Packet\n0-15: \"Source Port\"\n16-31: \"Destination Port\"\n32-47: \"Length\"\n48-63: \"Checksum\"\n64-95: \"Data (variable length)\"\n",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "e9ffc73e-5e5e-4fa2-9014-3c4cbbb632da",
      "category": "Kanban",
      "description": "a sample kanban diagram",
      "content": "kanban\n  Todo\n    [Create Documentation]\n    docs[Create Blog about the new diagram]\n  [In progress]\n    id6[Create renderer so that it works in all cases. We also add som extra text here for testing purposes. And some more just for the extra flare.]\n  id9[Ready for deploy]\n    id8[Design grammar]@{ assigned: 'knsv' }\n  id10[Ready for test]\n    id4[Create parsing tests]@{ ticket: MC-2038, assigned: 'K.Sveidqvist', priority: 'High' }\n    id66[last item]@{ priority: 'Very Low', assigned: 'knsv' }\n  id11[Done]\n    id5[define getData]\n    id2[Title of diagram is more than 100 chars when user duplicates diagram with 100 char]@{ ticket: MC-2036, priority: 'Very High'}\n    id3[Update DB function]@{ ticket: MC-2037, assigned: knsv, priority: 'High' }\n\n  id12[Can't reproduce]\n    id3[Weird flickering in Firefox]",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "b3cb24e9-701f-48e8-9101-84f6e4a8e4b8",
      "category": "Block",
      "description": "a sample block diagram",
      "content": "block-beta\ncolumns 1\n  db((\"DB\"))\n  blockArrowId6<[\"&nbsp;&nbsp;&nbsp;\"]>(down)\n  block:ID\n    A\n    B[\"A wide one in the middle\"]\n    C\n  end\n  space\n  D\n  ID --> D\n  C --> D\n  style B fill:#969,stroke:#333,stroke-width:4px\n",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "ca66b544-dd4d-47a8-823e-dec281579650",
      "category": "Architecture",
      "description": "a sample architecture diagram",
      "content": "architecture-beta\n    group api(cloud)[API]\n\n    service db(database)[Database] in api\n    service disk1(disk)[Storage] in api\n    service disk2(disk)[Storage] in api\n    service server(server)[Server] in api\n\n    db:L -- R:server\n    disk1:T -- B:server\n    disk2:T -- B:db\n",
      "sortingOrder": 0,
      "isPinned": false
    }
  ],
  "selectedCategory": "StateDiagram"
}